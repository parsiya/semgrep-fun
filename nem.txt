                     
                     
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ 545 Code Findings ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
                                           
  [36m[22m[24m  code/logrus/alt_exit.go [0m
       [1m[24mgo-import-collection[0m
          $ALIAS - fmt               
                                     
           25‚îÜ [1m[24mimport ([0m
           26‚îÜ [1m[24m        
  "fmt"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - os                
                                     
           25‚îÜ [1m[24mimport ([0m
           26‚îÜ [1m[24m        
  "fmt"[0m                    
           27‚îÜ [1m[24m       
  "os"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m            
          logrus - runHandler - recover - $IMP
                                              
           34‚îÜ if err := [1m[24mrecover[0m(); err != nil {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m            
          logrus - runHandler - Fprintln - fmt
                                              
           35‚îÜ fmt.[1m[24mFprintln[0m(os.Stderr, "Error: Logrus exit handler error:", err)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m            
          logrus - runHandler - handler - $IMP
                                              
           39‚îÜ [1m[24mhandler[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                
          logrus - runHandlers - runHandler - $IMP
                                                  
           44‚îÜ [1m[24mrunHandler[0m(handler)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m          
          logrus - Exit - runHandlers - $IMP
                                            
           50‚îÜ [1m[24mrunHandlers[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m 
          logrus - Exit - Exit - os
                                   
           51‚îÜ os.[1m[24mExit[0m(code)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                    
          logrus - RegisterExitHandler - append - $IMP
                                                      
           63‚îÜ handlers = [1m[24mappend[0m(handlers, handler)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                 
          logrus - DeferExitHandler - append - $IMP
                                                   
           75‚îÜ handlers = [1m[24mappend[0m([]func(){handler}, handlers...)
                                              
  [36m[22m[24m  code/logrus/buffer_pool.go [0m
       [1m[24mgo-import-collection[0m
          $ALIAS - bytes             
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - sync              
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            5‚îÜ [1m[24m         
  "sync"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m   
          logrus - Put - Put - p.pool
                                     
           22‚îÜ p.pool.[1m[24mPut[0m(buf)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m   
          logrus - Get - Get - p.pool
                                     
           26‚îÜ return p.pool.[1m[24mGet[0m().(*bytes.Buffer)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m            
          logrus - init - SetBufferPool - $IMP
                                              
           36‚îÜ [1m[24mSetBufferPool[0m(&defaultPool{
                                          
  [36m[22m[24m  code/logrus/ci/mage.go [0m
       [1m[24mgo-import-collection[0m           
          $ALIAS - github.com/magefile/mage/mage
                                                
            5‚îÜ [1m[24mimport ([0m
            6‚îÜ [1m[24m                                  
  "github.com/magefile/mage/mage"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - os                
                                     
            5‚îÜ [1m[24mimport ([0m
            6‚îÜ [1m[24m                                  
  "github.com/magefile/mage/mage"[0m                    
            7‚îÜ [1m[24m       
  "os"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m
          main - main - Exit - os 
                                  
           10‚îÜ func main() { os.[1m[24mExit[0m(mage.Main()) }
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m 
          main - main - Main - mage
                                   
           10‚îÜ func main() { os.Exit(mage.[1m[24mMain[0m()) }
                                              
  [36m[22m[24m  code/logrus/ci/magefile.go [0m
       [1m[24mgo-import-collection[0m
          $ALIAS - encoding/json     
                                     
            5‚îÜ [1m[24mimport ([0m
            6‚îÜ [1m[24m                  
  "encoding/json"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - fmt               
                                     
            5‚îÜ [1m[24mimport ([0m
            6‚îÜ [1m[24m                  
  "encoding/json"[0m                    
            7‚îÜ [1m[24m        
  "fmt"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - os                
                                     
            5‚îÜ [1m[24mimport ([0m
            6‚îÜ [1m[24m                  
  "encoding/json"[0m                    
            7‚îÜ [1m[24m        
  "fmt"[0m                    
            8‚îÜ [1m[24m       
  "os"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - path              
                                     
            5‚îÜ [1m[24mimport ([0m
            6‚îÜ [1m[24m                  
  "encoding/json"[0m                    
            7‚îÜ [1m[24m        
  "fmt"[0m                    
            8‚îÜ [1m[24m       
  "os"[0m                    
            9‚îÜ [1m[24m         
  "path"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - sort              
                                     
            5‚îÜ [1m[24mimport ([0m
            6‚îÜ [1m[24m                  
  "encoding/json"[0m                    
            7‚îÜ [1m[24m        
  "fmt"[0m                    
            8‚îÜ [1m[24m       
  "os"[0m                    
            9‚îÜ [1m[24m         
  "path"[0m                    
           10‚îÜ [1m[24m         
  "sort"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m         
          $ALIAS - github.com/magefile/mage/mg
                                              
            5‚îÜ [1m[24mimport ([0m
            6‚îÜ [1m[24m                  
  "encoding/json"[0m                    
            7‚îÜ [1m[24m        
  "fmt"[0m                    
            8‚îÜ [1m[24m       
  "os"[0m                    
            9‚îÜ [1m[24m         
  "path"[0m                    
           10‚îÜ [1m[24m         
  "sort"[0m                    
           11‚îÜ [1m[24m[0m
           12‚îÜ [1m[24m                                
  "github.com/magefile/mage/mg"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m         
          $ALIAS - github.com/magefile/mage/sh
                                              
            5‚îÜ [1m[24mimport ([0m
            6‚îÜ [1m[24m                  
  "encoding/json"[0m                    
            7‚îÜ [1m[24m        
  "fmt"[0m                    
            8‚îÜ [1m[24m       
  "os"[0m                    
            9‚îÜ [1m[24m         
  "path"[0m                    
           10‚îÜ [1m[24m         
  "sort"[0m                    
           11‚îÜ [1m[24m[0m
           12‚îÜ [1m[24m                                
  "github.com/magefile/mage/mg"[0m                    
           13‚îÜ [1m[24m                                
  "github.com/magefile/mage/sh"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m         
          main - intersect - Strings - sort
                                           
           17‚îÜ sort.[1m[24mStrings[0m(a)
            ‚ãÆ‚îÜ----------------------------------------
           18‚îÜ sort.[1m[24mStrings[0m(b)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                                                      
          main - intersect - func() int {                 if len(a) < len(b) {          
          return len(a)                 }                 return len(b)         } - $IMP
                                                                                        
           20‚îÜ res := make([]string, 0, [1m[24mfunc() int {[0m
           21‚îÜ [1m[24m    if len(a) < len(b) 
  {[0m                                       
           22‚îÜ [1m[24m                
  return len(a)[0m                    
           23‚îÜ [1m[24m    
  }[0m                    
           24‚îÜ [1m[24m    return      
  len(b)[0m                           
           25‚îÜ [1m[24m}[0m())
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m     
          main - intersect - len - $IMP
                                       
           21‚îÜ if [1m[24mlen[0m(a) < len(b) {
            ‚ãÆ‚îÜ----------------------------------------
           21‚îÜ if len(a) < [1m[24mlen[0m(b) {
            ‚ãÆ‚îÜ----------------------------------------
           22‚îÜ return [1m[24mlen[0m(a)
            ‚ãÆ‚îÜ----------------------------------------
           24‚îÜ return [1m[24mlen[0m(b)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m               
          main - intersect - SearchStrings - sort
                                                 
           28‚îÜ idx := sort.[1m[24mSearchStrings[0m(b, v)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m     
          main - intersect - len - $IMP
                                       
           29‚îÜ if idx < [1m[24mlen[0m(b) && b[idx] == v {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          main - intersect - append - $IMP
                                          
           30‚îÜ res = [1m[24mappend[0m(res, v)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m               
          main - getFullBuildMatrix - Output - sh
                                                 
           38‚îÜ jsonData, err := sh.[1m[24mOutput[0m("go", "tool", "dist", "list", "-json")
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                    
          main - getFullBuildMatrix - Unmarshal - json
                                                      
           46‚îÜ if err := json.[1m[24mUnmarshal[0m([]byte(jsonData), &data); err != nil {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                 
          main - getFullBuildMatrix - append - $IMP
                                                   
           53‚îÜ matrix[v.Goos] = [1m[24mappend[0m(val, v.Goarch)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                         
          main - getBuildMatrix - getFullBuildMatrix - $IMP
                                                           
           72‚îÜ fullMatrix, err := [1m[24mgetFullBuildMatrix[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m             
          main - getBuildMatrix - delete - $IMP
                                               
           79‚îÜ [1m[24mdelete[0m(minimalMatrix, os)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                
          main - getBuildMatrix - intersect - $IMP
                                                  
           81‚îÜ minimalMatrix[os] = [1m[24mintersect[0m(arches, fullV)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                 
          main - CrossBuild - getBuildMatrix - $IMP
                                                   
           88‚îÜ matrix, err := [1m[24mgetBuildMatrix[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          main - CrossBuild - Verbose - mg
                                          
           99‚îÜ if mg.[1m[24mVerbose[0m() {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          main - CrossBuild - Printf - fmt
                                          
          100‚îÜ fmt.[1m[24mPrintf[0m("Building for GOOS=%s GOARCH=%s\n", os, arch)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          main - CrossBuild - RunWith - sh
                                          
          102‚îÜ if err := sh.[1m[24mRunWith[0m(env, "go", "build", "./..."); err != nil {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m 
          main - Lint - Getenv - os
                                   
          111‚îÜ gopath := os.[1m[24mGetenv[0m("GOPATH")
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m  
          main - Lint - Errorf - fmt
                                    
          113‚îÜ return fmt.[1m[24mErrorf[0m("cannot retrieve GOPATH")
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m
          main - Lint - Run - sh  
                                  
          116‚îÜ return sh.[1m[24mRun[0m(path.Join(gopath, "bin", "golangci-lint"), "run", "./...")
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m 
          main - Lint - Join - path
                                   
          116‚îÜ return sh.Run(path.[1m[24mJoin[0m(gopath, "bin", "golangci-lint"), "run", "./...")
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m  
          main - Test - RunWith - sh
                                    
          121‚îÜ return sh.[1m[24mRunWith[0m(map[string]string{"GORACE": "halt_on_error=1"},
                                        
  [36m[22m[24m  code/logrus/entry.go [0m
       [1m[24mgo-import-collection[0m
          $ALIAS - bytes             
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - context           
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            5‚îÜ [1m[24m            
  "context"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - fmt               
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            5‚îÜ [1m[24m            
  "context"[0m                    
            6‚îÜ [1m[24m        
  "fmt"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - os                
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            5‚îÜ [1m[24m            
  "context"[0m                    
            6‚îÜ [1m[24m        
  "fmt"[0m                    
            7‚îÜ [1m[24m       
  "os"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - reflect           
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            5‚îÜ [1m[24m            
  "context"[0m                    
            6‚îÜ [1m[24m        
  "fmt"[0m                    
            7‚îÜ [1m[24m       
  "os"[0m                    
            8‚îÜ [1m[24m            
  "reflect"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - runtime           
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            5‚îÜ [1m[24m            
  "context"[0m                    
            6‚îÜ [1m[24m        
  "fmt"[0m                    
            7‚îÜ [1m[24m       
  "os"[0m                    
            8‚îÜ [1m[24m            
  "reflect"[0m                    
            9‚îÜ [1m[24m            
  "runtime"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - strings           
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            5‚îÜ [1m[24m            
  "context"[0m                    
            6‚îÜ [1m[24m        
  "fmt"[0m                    
            7‚îÜ [1m[24m       
  "os"[0m                    
            8‚îÜ [1m[24m            
  "reflect"[0m                    
            9‚îÜ [1m[24m            
  "runtime"[0m                    
           10‚îÜ [1m[24m            
  "strings"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - sync              
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            5‚îÜ [1m[24m            
  "context"[0m                    
            6‚îÜ [1m[24m        
  "fmt"[0m                    
            7‚îÜ [1m[24m       
  "os"[0m                    
            8‚îÜ [1m[24m            
  "reflect"[0m                    
            9‚îÜ [1m[24m            
  "runtime"[0m                    
           10‚îÜ [1m[24m            
  "strings"[0m                    
           11‚îÜ [1m[24m         
  "sync"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - time              
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            5‚îÜ [1m[24m            
  "context"[0m                    
            6‚îÜ [1m[24m        
  "fmt"[0m                    
            7‚îÜ [1m[24m       
  "os"[0m                    
            8‚îÜ [1m[24m            
  "reflect"[0m                    
            9‚îÜ [1m[24m            
  "runtime"[0m                    
           10‚îÜ [1m[24m            
  "strings"[0m                    
           11‚îÜ [1m[24m         
  "sync"[0m                    
           12‚îÜ [1m[24m         
  "time"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m 
          logrus - Dup - len - $IMP
                                   
           82‚îÜ data := make(Fields, [1m[24mlen[0m(entry.Data))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                        
          logrus - Bytes - Format - entry.Logger.Formatter
                                                          
           91‚îÜ return entry.Logger.Formatter.[1m[24mFormat[0m(entry)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - String - Bytes - entry
                                         
           97‚îÜ serialized, err := entry.[1m[24mBytes[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - String - string - $IMP
                                         
          101‚îÜ str := [1m[24mstring[0m(serialized)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - WithError - WithField - entry
                                                
          107‚îÜ return entry.[1m[24mWithField[0m(ErrorKey, err)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m         
          logrus - WithContext - len - $IMP
                                           
          112‚îÜ dataCopy := make(Fields, [1m[24mlen[0m(entry.Data))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m               
          logrus - WithField - WithFields - entry
                                                 
          121‚îÜ return entry.[1m[24mWithFields[0m(Fields{key: value})
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - WithFields - len - $IMP
                                          
          126‚îÜ data := make(Fields, [1m[24mlen[0m(entry.Data)+len(fields))
            ‚ãÆ‚îÜ----------------------------------------
          126‚îÜ data := make(Fields, len(entry.Data)+[1m[24mlen[0m(fields))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - WithFields - TypeOf - reflect
                                                
          133‚îÜ if t := reflect.[1m[24mTypeOf[0m(v); t != nil {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m      
          logrus - WithFields - Kind - t
                                        
          135‚îÜ case t.[1m[24mKind[0m() == reflect.Func, t.Kind() == reflect.Ptr && t.Elem().Kind() == reflect.Func:
            ‚ãÆ‚îÜ----------------------------------------
          135‚îÜ case t.Kind() == reflect.Func, t.[1m[24mKind[0m() == reflect.Ptr && t.Elem().Kind() == reflect.Func:
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m      
          logrus - WithFields - Elem - t
                                        
          135‚îÜ case t.Kind() == reflect.Func, t.Kind() == reflect.Ptr && t.[1m[24mElem[0m().Kind() == reflect.Func:
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m             
          logrus - WithFields - Kind - t.Elem()
                                               
          135‚îÜ case t.Kind() == reflect.Func, t.Kind() == reflect.Ptr && t.Elem().[1m[24mKind[0m() == reflect.Func:
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m           
          logrus - WithFields - Sprintf - fmt
                                             
          140‚îÜ tmp := fmt.[1m[24mSprintf[0m("can not add field %q", k)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m      
          logrus - WithTime - len - $IMP
                                        
          155‚îÜ dataCopy := make(Fields, [1m[24mlen[0m(entry.Data))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                     
          logrus - getPackageName - LastIndex - strings
                                                       
          166‚îÜ lastPeriod := strings.[1m[24mLastIndex[0m(f, ".")
            ‚ãÆ‚îÜ----------------------------------------
          167‚îÜ lastSlash := strings.[1m[24mLastIndex[0m(f, "/")
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                
          logrus - getCaller - Do - callerInitOnce
                                                  
          181‚îÜ callerInitOnce.[1m[24mDo[0m(func() {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - getCaller - Callers - runtime
                                                
          183‚îÜ _ = runtime.[1m[24mCallers[0m(0, pcs)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                
          logrus - getCaller - FuncForPC - runtime
                                                  
          187‚îÜ funcName := runtime.[1m[24mFuncForPC[0m(pcs[i]).Name()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                             
          logrus - getCaller - Name - runtime.FuncForPC(pcs[i])
                                                               
          187‚îÜ funcName := runtime.FuncForPC(pcs[i]).[1m[24mName[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m               
          logrus - getCaller - Contains - strings
                                                 
          188‚îÜ if strings.[1m[24mContains[0m(funcName, "getCaller") {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                  
          logrus - getCaller - getPackageName - $IMP
                                                    
          189‚îÜ logrusPackage = [1m[24mgetPackageName[0m(funcName)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - getCaller - Callers - runtime
                                                
          199‚îÜ depth := runtime.[1m[24mCallers[0m(minimumCallerDepth, pcs)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                    
          logrus - getCaller - CallersFrames - runtime
                                                      
          200‚îÜ frames := runtime.[1m[24mCallersFrames[0m(pcs[:depth])
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m          
          logrus - getCaller - Next - frames
                                            
          202‚îÜ for f, again := frames.[1m[24mNext[0m(); again; f, again = frames.Next() {
            ‚ãÆ‚îÜ----------------------------------------
          202‚îÜ for f, again := frames.Next(); again; f, again = frames.[1m[24mNext[0m() {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                  
          logrus - getCaller - getPackageName - $IMP
                                                    
          203‚îÜ pkg := [1m[24mgetPackageName[0m(f.Function)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m  
          logrus - log - Dup - entry
                                    
          224‚îÜ newEntry := entry.[1m[24mDup[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m             
          logrus - log - IsZero - newEntry.Time
                                               
          226‚îÜ if newEntry.Time.[1m[24mIsZero[0m() {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m 
          logrus - log - Now - time
                                   
          227‚îÜ newEntry.Time = time.[1m[24mNow[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                
          logrus - log - Lock - newEntry.Logger.mu
                                                  
          233‚îÜ newEntry.Logger.mu.[1m[24mLock[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m               
          logrus - log - getBufferPool - newEntry
                                                 
          235‚îÜ bufPool := newEntry.[1m[24mgetBufferPool[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                  
          logrus - log - Unlock - newEntry.Logger.mu
                                                    
          236‚îÜ newEntry.Logger.mu.[1m[24mUnlock[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - log - getCaller - $IMP
                                         
          239‚îÜ newEntry.Caller = [1m[24mgetCaller[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m           
          logrus - log - fireHooks - newEntry
                                             
          242‚îÜ newEntry.[1m[24mfireHooks[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m    
          logrus - log - Get - bufPool
                                      
          243‚îÜ buffer = bufPool.[1m[24mGet[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m     
          logrus - log - Reset - buffer
                                       
          246‚îÜ buffer.[1m[24mReset[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m    
          logrus - log - Put - bufPool
                                      
          247‚îÜ bufPool.[1m[24mPut[0m(buffer)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m     
          logrus - log - Reset - buffer
                                       
          249‚îÜ buffer.[1m[24mReset[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - log - write - newEntry
                                         
          252‚îÜ newEntry.[1m[24mwrite[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m   
          logrus - log - panic - $IMP
                                     
          260‚îÜ [1m[24mpanic[0m(newEntry)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                   
          logrus - fireHooks - Lock - entry.Logger.mu
                                                     
          273‚îÜ entry.Logger.mu.[1m[24mLock[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - fireHooks - len - $IMP
                                         
          274‚îÜ tmpHooks = make(LevelHooks, [1m[24mlen[0m(entry.Logger.Hooks))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                     
          logrus - fireHooks - Unlock - entry.Logger.mu
                                                       
          278‚îÜ entry.Logger.mu.[1m[24mUnlock[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m            
          logrus - fireHooks - Fire - tmpHooks
                                              
          280‚îÜ err := tmpHooks.[1m[24mFire[0m(entry.Level, entry)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m          
          logrus - fireHooks - Fprintf - fmt
                                            
          282‚îÜ fmt.[1m[24mFprintf[0m(os.Stderr, "Failed to fire hook: %v\n", err)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m               
          logrus - write - Lock - entry.Logger.mu
                                                 
          287‚îÜ entry.Logger.mu.[1m[24mLock[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                 
          logrus - write - Unlock - entry.Logger.mu
                                                   
          288‚îÜ defer entry.Logger.mu.[1m[24mUnlock[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                        
          logrus - write - Format - entry.Logger.Formatter
                                                          
          289‚îÜ serialized, err := entry.Logger.Formatter.[1m[24mFormat[0m(entry)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m      
          logrus - write - Fprintf - fmt
                                        
          291‚îÜ fmt.[1m[24mFprintf[0m(os.Stderr, "Failed to obtain reader, %v\n", err)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                 
          logrus - write - Write - entry.Logger.Out
                                                   
          294‚îÜ if _, err := entry.Logger.Out.[1m[24mWrite[0m(serialized); err != nil {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m      
          logrus - write - Fprintf - fmt
                                        
          295‚îÜ fmt.[1m[24mFprintf[0m(os.Stderr, "Failed to write to log, %v\n", err)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                    
          logrus - Log - IsLevelEnabled - entry.Logger
                                                      
          303‚îÜ if entry.Logger.[1m[24mIsLevelEnabled[0m(level) {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m  
          logrus - Log - log - entry
                                    
          304‚îÜ entry.[1m[24mlog[0m(level, fmt.Sprint(args...))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m   
          logrus - Log - Sprint - fmt
                                     
          304‚îÜ entry.log(level, fmt.[1m[24mSprint[0m(args...))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m    
          logrus - Trace - Log - entry
                                      
          309‚îÜ entry.[1m[24mLog[0m(TraceLevel, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m    
          logrus - Debug - Log - entry
                                      
          313‚îÜ entry.[1m[24mLog[0m(DebugLevel, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m     
          logrus - Print - Info - entry
                                       
          317‚îÜ entry.[1m[24mInfo[0m(args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m   
          logrus - Info - Log - entry
                                     
          321‚îÜ entry.[1m[24mLog[0m(InfoLevel, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m   
          logrus - Warn - Log - entry
                                     
          325‚îÜ entry.[1m[24mLog[0m(WarnLevel, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - Warning - Warn - entry
                                         
          329‚îÜ entry.[1m[24mWarn[0m(args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m    
          logrus - Error - Log - entry
                                      
          333‚îÜ entry.[1m[24mLog[0m(ErrorLevel, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m    
          logrus - Fatal - Log - entry
                                      
          337‚îÜ entry.[1m[24mLog[0m(FatalLevel, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m            
          logrus - Fatal - Exit - entry.Logger
                                              
          338‚îÜ entry.Logger.[1m[24mExit[0m(1)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m    
          logrus - Panic - Log - entry
                                      
          342‚îÜ entry.[1m[24mLog[0m(PanicLevel, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                     
          logrus - Logf - IsLevelEnabled - entry.Logger
                                                       
          348‚îÜ if entry.Logger.[1m[24mIsLevelEnabled[0m(level) {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m   
          logrus - Logf - Log - entry
                                     
          349‚îÜ entry.[1m[24mLog[0m(level, fmt.Sprintf(format, args...))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m     
          logrus - Logf - Sprintf - fmt
                                       
          349‚îÜ entry.Log(level, fmt.[1m[24mSprintf[0m(format, args...))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m      
          logrus - Tracef - Logf - entry
                                        
          354‚îÜ entry.[1m[24mLogf[0m(TraceLevel, format, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m      
          logrus - Debugf - Logf - entry
                                        
          358‚îÜ entry.[1m[24mLogf[0m(DebugLevel, format, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m     
          logrus - Infof - Logf - entry
                                       
          362‚îÜ entry.[1m[24mLogf[0m(InfoLevel, format, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - Printf - Infof - entry
                                         
          366‚îÜ entry.[1m[24mInfof[0m(format, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m     
          logrus - Warnf - Logf - entry
                                       
          370‚îÜ entry.[1m[24mLogf[0m(WarnLevel, format, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m         
          logrus - Warningf - Warnf - entry
                                           
          374‚îÜ entry.[1m[24mWarnf[0m(format, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m      
          logrus - Errorf - Logf - entry
                                        
          378‚îÜ entry.[1m[24mLogf[0m(ErrorLevel, format, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m      
          logrus - Fatalf - Logf - entry
                                        
          382‚îÜ entry.[1m[24mLogf[0m(FatalLevel, format, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m             
          logrus - Fatalf - Exit - entry.Logger
                                               
          383‚îÜ entry.Logger.[1m[24mExit[0m(1)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m      
          logrus - Panicf - Logf - entry
                                        
          387‚îÜ entry.[1m[24mLogf[0m(PanicLevel, format, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                      
          logrus - Logln - IsLevelEnabled - entry.Logger
                                                        
          393‚îÜ if entry.Logger.[1m[24mIsLevelEnabled[0m(level) {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m    
          logrus - Logln - Log - entry
                                      
          394‚îÜ entry.[1m[24mLog[0m(level, entry.sprintlnn(args...))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m          
          logrus - Logln - sprintlnn - entry
                                            
          394‚îÜ entry.Log(level, entry.[1m[24msprintlnn[0m(args...))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - Traceln - Logln - entry
                                          
          399‚îÜ entry.[1m[24mLogln[0m(TraceLevel, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - Debugln - Logln - entry
                                          
          403‚îÜ entry.[1m[24mLogln[0m(DebugLevel, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - Infoln - Logln - entry
                                         
          407‚îÜ entry.[1m[24mLogln[0m(InfoLevel, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m         
          logrus - Println - Infoln - entry
                                           
          411‚îÜ entry.[1m[24mInfoln[0m(args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - Warnln - Logln - entry
                                         
          415‚îÜ entry.[1m[24mLogln[0m(WarnLevel, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m           
          logrus - Warningln - Warnln - entry
                                             
          419‚îÜ entry.[1m[24mWarnln[0m(args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - Errorln - Logln - entry
                                          
          423‚îÜ entry.[1m[24mLogln[0m(ErrorLevel, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - Fatalln - Logln - entry
                                          
          427‚îÜ entry.[1m[24mLogln[0m(FatalLevel, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - Fatalln - Exit - entry.Logger
                                                
          428‚îÜ entry.Logger.[1m[24mExit[0m(1)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - Panicln - Logln - entry
                                          
          432‚îÜ entry.[1m[24mLogln[0m(PanicLevel, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m           
          logrus - sprintlnn - Sprintln - fmt
                                             
          440‚îÜ msg := fmt.[1m[24mSprintln[0m(args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - sprintlnn - len - $IMP
                                         
          441‚îÜ return msg[:[1m[24mlen[0m(msg)-1]
                                           
  [36m[22m[24m  code/logrus/exported.go [0m
       [1m[24mgo-import-collection[0m
          $ALIAS - context           
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m            
  "context"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - io                
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m            
  "context"[0m                    
            5‚îÜ [1m[24m       
  "io"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - time              
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m            
  "context"[0m                    
            5‚îÜ [1m[24m       
  "io"[0m                    
            6‚îÜ [1m[24m         
  "time"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m            
          logrus - SetOutput - SetOutput - std
                                              
           20‚îÜ std.[1m[24mSetOutput[0m(out)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                  
          logrus - SetFormatter - SetFormatter - std
                                                    
           25‚îÜ std.[1m[24mSetFormatter[0m(formatter)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                        
          logrus - SetReportCaller - SetReportCaller - std
                                                          
           31‚îÜ std.[1m[24mSetReportCaller[0m(include)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m          
          logrus - SetLevel - SetLevel - std
                                            
           36‚îÜ std.[1m[24mSetLevel[0m(level)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m          
          logrus - GetLevel - GetLevel - std
                                            
           41‚îÜ return std.[1m[24mGetLevel[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                      
          logrus - IsLevelEnabled - IsLevelEnabled - std
                                                        
           46‚îÜ return std.[1m[24mIsLevelEnabled[0m(level)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - AddHook - AddHook - std
                                          
           51‚îÜ std.[1m[24mAddHook[0m(hook)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m            
          logrus - WithError - WithField - std
                                              
           56‚îÜ return std.[1m[24mWithField[0m(ErrorKey, err)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                
          logrus - WithContext - WithContext - std
                                                  
           61‚îÜ return std.[1m[24mWithContext[0m(ctx)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m            
          logrus - WithField - WithField - std
                                              
           70‚îÜ return std.[1m[24mWithField[0m(key, value)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - WithFields - WithFields - std
                                                
           80‚îÜ return std.[1m[24mWithFields[0m(fields)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m          
          logrus - WithTime - WithTime - std
                                            
           89‚îÜ return std.[1m[24mWithTime[0m(t)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m    
          logrus - Trace - Trace - std
                                      
           94‚îÜ std.[1m[24mTrace[0m(args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m    
          logrus - Debug - Debug - std
                                      
           99‚îÜ std.[1m[24mDebug[0m(args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m    
          logrus - Print - Print - std
                                      
          104‚îÜ std.[1m[24mPrint[0m(args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m  
          logrus - Info - Info - std
                                    
          109‚îÜ std.[1m[24mInfo[0m(args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m  
          logrus - Warn - Warn - std
                                    
          114‚îÜ std.[1m[24mWarn[0m(args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - Warning - Warning - std
                                          
          119‚îÜ std.[1m[24mWarning[0m(args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m    
          logrus - Error - Error - std
                                      
          124‚îÜ std.[1m[24mError[0m(args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m    
          logrus - Panic - Panic - std
                                      
          129‚îÜ std.[1m[24mPanic[0m(args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m    
          logrus - Fatal - Fatal - std
                                      
          134‚îÜ std.[1m[24mFatal[0m(args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - TraceFn - TraceFn - std
                                          
          139‚îÜ std.[1m[24mTraceFn[0m(fn)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - DebugFn - DebugFn - std
                                          
          144‚îÜ std.[1m[24mDebugFn[0m(fn)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - PrintFn - PrintFn - std
                                          
          149‚îÜ std.[1m[24mPrintFn[0m(fn)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m      
          logrus - InfoFn - InfoFn - std
                                        
          154‚îÜ std.[1m[24mInfoFn[0m(fn)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m      
          logrus - WarnFn - WarnFn - std
                                        
          159‚îÜ std.[1m[24mWarnFn[0m(fn)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m            
          logrus - WarningFn - WarningFn - std
                                              
          164‚îÜ std.[1m[24mWarningFn[0m(fn)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - ErrorFn - ErrorFn - std
                                          
          169‚îÜ std.[1m[24mErrorFn[0m(fn)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - PanicFn - PanicFn - std
                                          
          174‚îÜ std.[1m[24mPanicFn[0m(fn)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - FatalFn - FatalFn - std
                                          
          179‚îÜ std.[1m[24mFatalFn[0m(fn)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m      
          logrus - Tracef - Tracef - std
                                        
          184‚îÜ std.[1m[24mTracef[0m(format, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m      
          logrus - Debugf - Debugf - std
                                        
          189‚îÜ std.[1m[24mDebugf[0m(format, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m      
          logrus - Printf - Printf - std
                                        
          194‚îÜ std.[1m[24mPrintf[0m(format, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m    
          logrus - Infof - Infof - std
                                      
          199‚îÜ std.[1m[24mInfof[0m(format, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m    
          logrus - Warnf - Warnf - std
                                      
          204‚îÜ std.[1m[24mWarnf[0m(format, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m          
          logrus - Warningf - Warningf - std
                                            
          209‚îÜ std.[1m[24mWarningf[0m(format, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m      
          logrus - Errorf - Errorf - std
                                        
          214‚îÜ std.[1m[24mErrorf[0m(format, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m      
          logrus - Panicf - Panicf - std
                                        
          219‚îÜ std.[1m[24mPanicf[0m(format, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m      
          logrus - Fatalf - Fatalf - std
                                        
          224‚îÜ std.[1m[24mFatalf[0m(format, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - Traceln - Traceln - std
                                          
          229‚îÜ std.[1m[24mTraceln[0m(args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - Debugln - Debugln - std
                                          
          234‚îÜ std.[1m[24mDebugln[0m(args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - Println - Println - std
                                          
          239‚îÜ std.[1m[24mPrintln[0m(args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m      
          logrus - Infoln - Infoln - std
                                        
          244‚îÜ std.[1m[24mInfoln[0m(args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m      
          logrus - Warnln - Warnln - std
                                        
          249‚îÜ std.[1m[24mWarnln[0m(args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m            
          logrus - Warningln - Warningln - std
                                              
          254‚îÜ std.[1m[24mWarningln[0m(args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - Errorln - Errorln - std
                                          
          259‚îÜ std.[1m[24mErrorln[0m(args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - Panicln - Panicln - std
                                          
          264‚îÜ std.[1m[24mPanicln[0m(args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - Fatalln - Fatalln - std
                                          
          269‚îÜ std.[1m[24mFatalln[0m(args...)
                                            
  [36m[22m[24m  code/logrus/formatter.go [0m
       [1m[24mgo-import-collection[0m
          $ALIAS - time              
                                     
            3‚îÜ [1m[24mimport "time"[0m
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                        
          logrus - prefixFieldClashes - resolve - fieldMap
                                                          
           43‚îÜ timeKey := fieldMap.[1m[24mresolve[0m(FieldKeyTime)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                   
          logrus - prefixFieldClashes - delete - $IMP
                                                     
           46‚îÜ [1m[24mdelete[0m(data, timeKey)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                        
          logrus - prefixFieldClashes - resolve - fieldMap
                                                          
           49‚îÜ msgKey := fieldMap.[1m[24mresolve[0m(FieldKeyMsg)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                   
          logrus - prefixFieldClashes - delete - $IMP
                                                     
           52‚îÜ [1m[24mdelete[0m(data, msgKey)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                        
          logrus - prefixFieldClashes - resolve - fieldMap
                                                          
           55‚îÜ levelKey := fieldMap.[1m[24mresolve[0m(FieldKeyLevel)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                   
          logrus - prefixFieldClashes - delete - $IMP
                                                     
           58‚îÜ [1m[24mdelete[0m(data, levelKey)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                        
          logrus - prefixFieldClashes - resolve - fieldMap
                                                          
           61‚îÜ logrusErrKey := fieldMap.[1m[24mresolve[0m(FieldKeyLogrusError)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                   
          logrus - prefixFieldClashes - delete - $IMP
                                                     
           64‚îÜ [1m[24mdelete[0m(data, logrusErrKey)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                        
          logrus - prefixFieldClashes - resolve - fieldMap
                                                          
           69‚îÜ funcKey := fieldMap.[1m[24mresolve[0m(FieldKeyFunc)
            ‚ãÆ‚îÜ----------------------------------------
           73‚îÜ fileKey := fieldMap.[1m[24mresolve[0m(FieldKeyFile)
                                                      
  [36m[22m[24m  code/logrus/hooks/syslog/syslog.go [0m
       [1m[24mgo-import-collection[0m
          $ALIAS - fmt               
                                     
            5‚îÜ [1m[24mimport ([0m
            6‚îÜ [1m[24m        
  "fmt"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - log/syslog        
                                     
            5‚îÜ [1m[24mimport ([0m
            6‚îÜ [1m[24m        
  "fmt"[0m                    
            7‚îÜ [1m[24m               
  "log/syslog"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - os                
                                     
            5‚îÜ [1m[24mimport ([0m
            6‚îÜ [1m[24m        
  "fmt"[0m                    
            7‚îÜ [1m[24m               
  "log/syslog"[0m                    
            8‚îÜ [1m[24m       
  "os"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m        
          $ALIAS - github.com/sirupsen/logrus
                                             
            5‚îÜ [1m[24mimport ([0m
            6‚îÜ [1m[24m        
  "fmt"[0m                    
            7‚îÜ [1m[24m               
  "log/syslog"[0m                    
            8‚îÜ [1m[24m       
  "os"[0m                    
            9‚îÜ [1m[24m[0m
           10‚îÜ [1m[24m                               
  "github.com/sirupsen/logrus"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          syslog - NewSyslogHook - Dial - syslog
                                                
           24‚îÜ w, err := syslog.[1m[24mDial[0m(network, raddr, priority, tag)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m      
          syslog - Fire - String - entry
                                        
           29‚îÜ line, err := entry.[1m[24mString[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m     
          syslog - Fire - Fprintf - fmt
                                       
           31‚îÜ fmt.[1m[24mFprintf[0m(os.Stderr, "Unable to read entry, %v", err)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m          
          syslog - Fire - Crit - hook.Writer
                                            
           37‚îÜ return hook.Writer.[1m[24mCrit[0m(line)
            ‚ãÆ‚îÜ----------------------------------------
           39‚îÜ return hook.Writer.[1m[24mCrit[0m(line)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m         
          syslog - Fire - Err - hook.Writer
                                           
           41‚îÜ return hook.Writer.[1m[24mErr[0m(line)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m             
          syslog - Fire - Warning - hook.Writer
                                               
           43‚îÜ return hook.Writer.[1m[24mWarning[0m(line)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m          
          syslog - Fire - Info - hook.Writer
                                            
           45‚îÜ return hook.Writer.[1m[24mInfo[0m(line)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m           
          syslog - Fire - Debug - hook.Writer
                                             
           47‚îÜ return hook.Writer.[1m[24mDebug[0m(line)
                                                      
  [36m[22m[24m  code/logrus/hooks/writer/writer.go [0m
       [1m[24mgo-import-collection[0m
          $ALIAS - io                
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m       
  "io"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m     
          log - github.com/sirupsen/logrus
                                          
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m       
  "io"[0m                    
            5‚îÜ [1m[24m[0m
            6‚îÜ [1m[24m    log                            
  "github.com/sirupsen/logrus"[0m                        
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m     
          writer - Fire - Bytes - entry
                                       
           18‚îÜ line, err := entry.[1m[24mBytes[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m           
          writer - Fire - Write - hook.Writer
                                             
           22‚îÜ _, err = hook.Writer.[1m[24mWrite[0m(line)
                                        
  [36m[22m[24m  code/logrus/hooks.go [0m
       [1m[24mgo-function-chain[0m    
          logrus - Add - Levels - hook
                                      
           19‚îÜ for _, level := range hook.[1m[24mLevels[0m() {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m    
          logrus - Add - append - $IMP
                                      
           20‚îÜ hooks[level] = [1m[24mappend[0m(hooks[level], hook)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m   
          logrus - Fire - Fire - hook
                                     
           28‚îÜ if err := hook.[1m[24mFire[0m(entry); err != nil {
                                                               
  [36m[22m[24m  code/logrus/internal/testutils/testutils.go [0m
       [1m[24mgo-import-collection[0m
          $ALIAS - bytes             
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - encoding/json     
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            5‚îÜ [1m[24m                  
  "encoding/json"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - strconv           
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            5‚îÜ [1m[24m                  
  "encoding/json"[0m                    
            6‚îÜ [1m[24m            
  "strconv"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - strings           
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            5‚îÜ [1m[24m                  
  "encoding/json"[0m                    
            6‚îÜ [1m[24m            
  "strconv"[0m                    
            7‚îÜ [1m[24m            
  "strings"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - testing           
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            5‚îÜ [1m[24m                  
  "encoding/json"[0m                    
            6‚îÜ [1m[24m            
  "strconv"[0m                    
            7‚îÜ [1m[24m            
  "strings"[0m                    
            8‚îÜ [1m[24m            
  "testing"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m        
          $ALIAS - github.com/sirupsen/logrus
                                             
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            5‚îÜ [1m[24m                  
  "encoding/json"[0m                    
            6‚îÜ [1m[24m            
  "strconv"[0m                    
            7‚îÜ [1m[24m            
  "strings"[0m                    
            8‚îÜ [1m[24m            
  "testing"[0m                    
            9‚îÜ [1m[24m[0m
           10‚îÜ [1m[24m    .                            
  "github.com/sirupsen/logrus"[0m                      
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m                 
          $ALIAS - github.com/stretchr/testify/require
                                                      
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            5‚îÜ [1m[24m                  
  "encoding/json"[0m                    
            6‚îÜ [1m[24m            
  "strconv"[0m                    
            7‚îÜ [1m[24m            
  "strings"[0m                    
            8‚îÜ [1m[24m            
  "testing"[0m                    
            9‚îÜ [1m[24m[0m
           10‚îÜ [1m[24m    .                            
  "github.com/sirupsen/logrus"[0m                      
           11‚îÜ [1m[24m[0m
           12‚îÜ [1m[24m                                        
  "github.com/stretchr/testify/require"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                 
          testutils - LogAndAssertJSON - New - $IMP
                                                   
           19‚îÜ logger := [1m[24mNew[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                 
          testutils - LogAndAssertJSON - log - $IMP
                                                   
           23‚îÜ [1m[24mlog[0m(logger)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                       
          testutils - LogAndAssertJSON - Unmarshal - json
                                                         
           25‚îÜ err := json.[1m[24mUnmarshal[0m(buffer.Bytes(), &fields)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                     
          testutils - LogAndAssertJSON - Bytes - buffer
                                                       
           25‚îÜ err := json.Unmarshal(buffer.[1m[24mBytes[0m(), &fields)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                    
          testutils - LogAndAssertJSON - Nil - require
                                                      
           26‚îÜ require.[1m[24mNil[0m(t, err)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                        
          testutils - LogAndAssertJSON - assertions - $IMP
                                                          
           28‚îÜ [1m[24massertions[0m(fields)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                 
          testutils - LogAndAssertText - New - $IMP
                                                   
           34‚îÜ logger := [1m[24mNew[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                 
          testutils - LogAndAssertText - log - $IMP
                                                   
           40‚îÜ [1m[24mlog[0m(logger)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                      
          testutils - LogAndAssertText - Split - strings
                                                        
           43‚îÜ for _, kv := range strings.[1m[24mSplit[0m(strings.TrimRight(buffer.String(), "\n"), " ") {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                          
          testutils - LogAndAssertText - TrimRight - strings
                                                            
           43‚îÜ for _, kv := range strings.Split(strings.[1m[24mTrimRight[0m(buffer.String(), "\n"), " ") {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                      
          testutils - LogAndAssertText - String - buffer
                                                        
           43‚îÜ for _, kv := range strings.Split(strings.TrimRight(buffer.[1m[24mString[0m(), "\n"), " ") {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                         
          testutils - LogAndAssertText - Contains - strings
                                                           
           44‚îÜ if !strings.[1m[24mContains[0m(kv, "=") {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                      
          testutils - LogAndAssertText - Split - strings
                                                        
           47‚îÜ kvArr := strings.[1m[24mSplit[0m(kv, "=")
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                          
          testutils - LogAndAssertText - TrimSpace - strings
                                                            
           48‚îÜ key := strings.[1m[24mTrimSpace[0m(kvArr[0])
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                        
          testutils - LogAndAssertText - Unquote - strconv
                                                          
           52‚îÜ val, err = strconv.[1m[24mUnquote[0m(val)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                        
          testutils - LogAndAssertText - NoError - require
                                                          
           53‚îÜ require.[1m[24mNoError[0m(t, err)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                        
          testutils - LogAndAssertText - assertions - $IMP
                                                          
           57‚îÜ [1m[24massertions[0m(fields)
                                                 
  [36m[22m[24m  code/logrus/json_formatter.go [0m
       [1m[24mgo-import-collection[0m
          $ALIAS - bytes             
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - encoding/json     
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            5‚îÜ [1m[24m                  
  "encoding/json"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - fmt               
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            5‚îÜ [1m[24m                  
  "encoding/json"[0m                    
            6‚îÜ [1m[24m        
  "fmt"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - runtime           
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            5‚îÜ [1m[24m                  
  "encoding/json"[0m                    
            6‚îÜ [1m[24m        
  "fmt"[0m                    
            7‚îÜ [1m[24m            
  "runtime"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - resolve - string - $IMP
                                          
           20‚îÜ return [1m[24mstring[0m(key)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m    
          logrus - Format - len - $IMP
                                      
           64‚îÜ data := make(Fields, [1m[24mlen[0m(entry.Data)+4)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m   
          logrus - Format - Error - v
                                     
           70‚îÜ data[k] = v.[1m[24mError[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                   
          logrus - Format - prefixFieldClashes - $IMP
                                                     
           82‚îÜ [1m[24mprefixFieldClashes[0m(data, f.FieldMap, entry.HasCaller())
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m           
          logrus - Format - HasCaller - entry
                                             
           82‚îÜ prefixFieldClashes(data, f.FieldMap, entry.[1m[24mHasCaller[0m())
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - Format - resolve - f.FieldMap
                                                
           90‚îÜ data[f.FieldMap.[1m[24mresolve[0m(FieldKeyLogrusError)] = entry.err
            ‚ãÆ‚îÜ----------------------------------------
           93‚îÜ data[f.FieldMap.[1m[24mresolve[0m(FieldKeyTime)] = entry.Time.Format(timestampFormat)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m             
          logrus - Format - Format - entry.Time
                                               
           93‚îÜ data[f.FieldMap.resolve(FieldKeyTime)] = entry.Time.[1m[24mFormat[0m(timestampFormat)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - Format - resolve - f.FieldMap
                                                
           95‚îÜ data[f.FieldMap.[1m[24mresolve[0m(FieldKeyMsg)] = entry.Message
            ‚ãÆ‚îÜ----------------------------------------
           96‚îÜ data[f.FieldMap.[1m[24mresolve[0m(FieldKeyLevel)] = entry.Level.String()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - Format - String - entry.Level
                                                
           96‚îÜ data[f.FieldMap.resolve(FieldKeyLevel)] = entry.Level.[1m[24mString[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m           
          logrus - Format - HasCaller - entry
                                             
           97‚îÜ if entry.[1m[24mHasCaller[0m() {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - Format - Sprintf - fmt
                                         
           99‚îÜ fileVal := fmt.[1m[24mSprintf[0m("%s:%d", entry.Caller.File, entry.Caller.Line)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - Format - CallerPrettyfier - f
                                                
          101‚îÜ funcVal, fileVal = f.[1m[24mCallerPrettyfier[0m(entry.Caller)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - Format - resolve - f.FieldMap
                                                
          104‚îÜ data[f.FieldMap.[1m[24mresolve[0m(FieldKeyFunc)] = funcVal
            ‚ãÆ‚îÜ----------------------------------------
          107‚îÜ data[f.FieldMap.[1m[24mresolve[0m(FieldKeyFile)] = fileVal
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m           
          logrus - Format - NewEncoder - json
                                             
          118‚îÜ encoder := json.[1m[24mNewEncoder[0m(b)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                 
          logrus - Format - SetEscapeHTML - encoder
                                                   
          119‚îÜ encoder.[1m[24mSetEscapeHTML[0m(!f.DisableHTMLEscape)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m             
          logrus - Format - SetIndent - encoder
                                               
          121‚îÜ encoder.[1m[24mSetIndent[0m("", "  ")
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m          
          logrus - Format - Encode - encoder
                                            
          123‚îÜ if err := encoder.[1m[24mEncode[0m(data); err != nil {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m      
          logrus - Format - Errorf - fmt
                                        
          124‚îÜ return nil, fmt.[1m[24mErrorf[0m("failed to marshal fields to JSON, %w", err)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m   
          logrus - Format - Bytes - b
                                     
          127‚îÜ return b.[1m[24mBytes[0m(), nil
                                         
  [36m[22m[24m  code/logrus/logger.go [0m
       [1m[24mgo-import-collection[0m
          $ALIAS - context           
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m            
  "context"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - io                
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m            
  "context"[0m                    
            5‚îÜ [1m[24m       
  "io"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - os                
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m            
  "context"[0m                    
            5‚îÜ [1m[24m       
  "io"[0m                    
            6‚îÜ [1m[24m       
  "os"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - sync              
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m            
  "context"[0m                    
            5‚îÜ [1m[24m       
  "io"[0m                    
            6‚îÜ [1m[24m       
  "os"[0m                    
            7‚îÜ [1m[24m         
  "sync"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - sync/atomic       
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m            
  "context"[0m                    
            5‚îÜ [1m[24m       
  "io"[0m                    
            6‚îÜ [1m[24m       
  "os"[0m                    
            7‚îÜ [1m[24m         
  "sync"[0m                    
            8‚îÜ [1m[24m                
  "sync/atomic"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - time              
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m            
  "context"[0m                    
            5‚îÜ [1m[24m       
  "io"[0m                    
            6‚îÜ [1m[24m       
  "os"[0m                    
            7‚îÜ [1m[24m         
  "sync"[0m                    
            8‚îÜ [1m[24m                
  "sync/atomic"[0m                    
            9‚îÜ [1m[24m         
  "time"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m      
          logrus - Lock - Lock - mw.lock
                                        
           61‚îÜ mw.lock.[1m[24mLock[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m          
          logrus - Unlock - Unlock - mw.lock
                                            
           67‚îÜ mw.lock.[1m[24mUnlock[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                  
          logrus - newEntry - Get - logger.entryPool
                                                    
           99‚îÜ entry, ok := logger.entryPool.[1m[24mGet[0m().(*Entry)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m           
          logrus - newEntry - NewEntry - $IMP
                                             
          103‚îÜ return [1m[24mNewEntry[0m(logger)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                      
          logrus - releaseEntry - Put - logger.entryPool
                                                        
          108‚îÜ logger.entryPool.[1m[24mPut[0m(entry)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - WithField - newEntry - logger
                                                
          116‚îÜ entry := logger.[1m[24mnewEntry[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                  
          logrus - WithField - releaseEntry - logger
                                                    
          117‚îÜ defer logger.[1m[24mreleaseEntry[0m(entry)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - WithField - WithField - entry
                                                
          118‚îÜ return entry.[1m[24mWithField[0m(key, value)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m               
          logrus - WithFields - newEntry - logger
                                                 
          124‚îÜ entry := logger.[1m[24mnewEntry[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                   
          logrus - WithFields - releaseEntry - logger
                                                     
          125‚îÜ defer logger.[1m[24mreleaseEntry[0m(entry)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                
          logrus - WithFields - WithFields - entry
                                                  
          126‚îÜ return entry.[1m[24mWithFields[0m(fields)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - WithError - newEntry - logger
                                                
          132‚îÜ entry := logger.[1m[24mnewEntry[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                  
          logrus - WithError - releaseEntry - logger
                                                    
          133‚îÜ defer logger.[1m[24mreleaseEntry[0m(entry)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - WithError - WithError - entry
                                                
          134‚îÜ return entry.[1m[24mWithError[0m(err)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                
          logrus - WithContext - newEntry - logger
                                                  
          139‚îÜ entry := logger.[1m[24mnewEntry[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                    
          logrus - WithContext - releaseEntry - logger
                                                      
          140‚îÜ defer logger.[1m[24mreleaseEntry[0m(entry)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                  
          logrus - WithContext - WithContext - entry
                                                    
          141‚îÜ return entry.[1m[24mWithContext[0m(ctx)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m             
          logrus - WithTime - newEntry - logger
                                               
          146‚îÜ entry := logger.[1m[24mnewEntry[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                 
          logrus - WithTime - releaseEntry - logger
                                                   
          147‚îÜ defer logger.[1m[24mreleaseEntry[0m(entry)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m            
          logrus - WithTime - WithTime - entry
                                              
          148‚îÜ return entry.[1m[24mWithTime[0m(t)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m               
          logrus - Logf - IsLevelEnabled - logger
                                                 
          152‚îÜ if logger.[1m[24mIsLevelEnabled[0m(level) {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m         
          logrus - Logf - newEntry - logger
                                           
          153‚îÜ entry := logger.[1m[24mnewEntry[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m    
          logrus - Logf - Logf - entry
                                      
          154‚îÜ entry.[1m[24mLogf[0m(level, format, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m             
          logrus - Logf - releaseEntry - logger
                                               
          155‚îÜ logger.[1m[24mreleaseEntry[0m(entry)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - Tracef - Logf - logger
                                         
          160‚îÜ logger.[1m[24mLogf[0m(TraceLevel, format, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - Debugf - Logf - logger
                                         
          164‚îÜ logger.[1m[24mLogf[0m(DebugLevel, format, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m      
          logrus - Infof - Logf - logger
                                        
          168‚îÜ logger.[1m[24mLogf[0m(InfoLevel, format, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m           
          logrus - Printf - newEntry - logger
                                             
          172‚îÜ entry := logger.[1m[24mnewEntry[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - Printf - Printf - entry
                                          
          173‚îÜ entry.[1m[24mPrintf[0m(format, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m               
          logrus - Printf - releaseEntry - logger
                                                 
          174‚îÜ logger.[1m[24mreleaseEntry[0m(entry)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m      
          logrus - Warnf - Logf - logger
                                        
          178‚îÜ logger.[1m[24mLogf[0m(WarnLevel, format, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m          
          logrus - Warningf - Warnf - logger
                                            
          182‚îÜ logger.[1m[24mWarnf[0m(format, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - Errorf - Logf - logger
                                         
          186‚îÜ logger.[1m[24mLogf[0m(ErrorLevel, format, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - Fatalf - Logf - logger
                                         
          190‚îÜ logger.[1m[24mLogf[0m(FatalLevel, format, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - Fatalf - Exit - logger
                                         
          191‚îÜ logger.[1m[24mExit[0m(1)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - Panicf - Logf - logger
                                         
          195‚îÜ logger.[1m[24mLogf[0m(PanicLevel, format, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - Log - IsLevelEnabled - logger
                                                
          202‚îÜ if logger.[1m[24mIsLevelEnabled[0m(level) {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - Log - newEntry - logger
                                          
          203‚îÜ entry := logger.[1m[24mnewEntry[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m  
          logrus - Log - Log - entry
                                    
          204‚îÜ entry.[1m[24mLog[0m(level, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m            
          logrus - Log - releaseEntry - logger
                                              
          205‚îÜ logger.[1m[24mreleaseEntry[0m(entry)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                
          logrus - LogFn - IsLevelEnabled - logger
                                                  
          210‚îÜ if logger.[1m[24mIsLevelEnabled[0m(level) {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m          
          logrus - LogFn - newEntry - logger
                                            
          211‚îÜ entry := logger.[1m[24mnewEntry[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m    
          logrus - LogFn - Log - entry
                                      
          212‚îÜ entry.[1m[24mLog[0m(level, fn()...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m  
          logrus - LogFn - fn - $IMP
                                    
          212‚îÜ entry.Log(level, [1m[24mfn[0m()...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - LogFn - releaseEntry - logger
                                                
          213‚îÜ logger.[1m[24mreleaseEntry[0m(entry)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m     
          logrus - Trace - Log - logger
                                       
          218‚îÜ logger.[1m[24mLog[0m(TraceLevel, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m     
          logrus - Debug - Log - logger
                                       
          222‚îÜ logger.[1m[24mLog[0m(DebugLevel, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m    
          logrus - Info - Log - logger
                                      
          226‚îÜ logger.[1m[24mLog[0m(InfoLevel, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m          
          logrus - Print - newEntry - logger
                                            
          230‚îÜ entry := logger.[1m[24mnewEntry[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m      
          logrus - Print - Print - entry
                                        
          231‚îÜ entry.[1m[24mPrint[0m(args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - Print - releaseEntry - logger
                                                
          232‚îÜ logger.[1m[24mreleaseEntry[0m(entry)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m    
          logrus - Warn - Log - logger
                                      
          236‚îÜ logger.[1m[24mLog[0m(WarnLevel, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - Warning - Warn - logger
                                          
          240‚îÜ logger.[1m[24mWarn[0m(args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m     
          logrus - Error - Log - logger
                                       
          244‚îÜ logger.[1m[24mLog[0m(ErrorLevel, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m     
          logrus - Fatal - Log - logger
                                       
          248‚îÜ logger.[1m[24mLog[0m(FatalLevel, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m      
          logrus - Fatal - Exit - logger
                                        
          249‚îÜ logger.[1m[24mExit[0m(1)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m     
          logrus - Panic - Log - logger
                                       
          253‚îÜ logger.[1m[24mLog[0m(PanicLevel, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m         
          logrus - TraceFn - LogFn - logger
                                           
          257‚îÜ logger.[1m[24mLogFn[0m(TraceLevel, fn)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m         
          logrus - DebugFn - LogFn - logger
                                           
          261‚îÜ logger.[1m[24mLogFn[0m(DebugLevel, fn)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - InfoFn - LogFn - logger
                                          
          265‚îÜ logger.[1m[24mLogFn[0m(InfoLevel, fn)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m            
          logrus - PrintFn - newEntry - logger
                                              
          269‚îÜ entry := logger.[1m[24mnewEntry[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - PrintFn - Print - entry
                                          
          270‚îÜ entry.[1m[24mPrint[0m(fn()...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m    
          logrus - PrintFn - fn - $IMP
                                      
          270‚îÜ entry.Print([1m[24mfn[0m()...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                
          logrus - PrintFn - releaseEntry - logger
                                                  
          271‚îÜ logger.[1m[24mreleaseEntry[0m(entry)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - WarnFn - LogFn - logger
                                          
          275‚îÜ logger.[1m[24mLogFn[0m(WarnLevel, fn)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m            
          logrus - WarningFn - WarnFn - logger
                                              
          279‚îÜ logger.[1m[24mWarnFn[0m(fn)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m         
          logrus - ErrorFn - LogFn - logger
                                           
          283‚îÜ logger.[1m[24mLogFn[0m(ErrorLevel, fn)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m         
          logrus - FatalFn - LogFn - logger
                                           
          287‚îÜ logger.[1m[24mLogFn[0m(FatalLevel, fn)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - FatalFn - Exit - logger
                                          
          288‚îÜ logger.[1m[24mExit[0m(1)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m         
          logrus - PanicFn - LogFn - logger
                                           
          292‚îÜ logger.[1m[24mLogFn[0m(PanicLevel, fn)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                
          logrus - Logln - IsLevelEnabled - logger
                                                  
          296‚îÜ if logger.[1m[24mIsLevelEnabled[0m(level) {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m          
          logrus - Logln - newEntry - logger
                                            
          297‚îÜ entry := logger.[1m[24mnewEntry[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m      
          logrus - Logln - Logln - entry
                                        
          298‚îÜ entry.[1m[24mLogln[0m(level, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - Logln - releaseEntry - logger
                                                
          299‚îÜ logger.[1m[24mreleaseEntry[0m(entry)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m         
          logrus - Traceln - Logln - logger
                                           
          304‚îÜ logger.[1m[24mLogln[0m(TraceLevel, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m         
          logrus - Debugln - Logln - logger
                                           
          308‚îÜ logger.[1m[24mLogln[0m(DebugLevel, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - Infoln - Logln - logger
                                          
          312‚îÜ logger.[1m[24mLogln[0m(InfoLevel, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m            
          logrus - Println - newEntry - logger
                                              
          316‚îÜ entry := logger.[1m[24mnewEntry[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m          
          logrus - Println - Println - entry
                                            
          317‚îÜ entry.[1m[24mPrintln[0m(args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                
          logrus - Println - releaseEntry - logger
                                                  
          318‚îÜ logger.[1m[24mreleaseEntry[0m(entry)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - Warnln - Logln - logger
                                          
          322‚îÜ logger.[1m[24mLogln[0m(WarnLevel, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m            
          logrus - Warningln - Warnln - logger
                                              
          326‚îÜ logger.[1m[24mWarnln[0m(args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m         
          logrus - Errorln - Logln - logger
                                           
          330‚îÜ logger.[1m[24mLogln[0m(ErrorLevel, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m         
          logrus - Fatalln - Logln - logger
                                           
          334‚îÜ logger.[1m[24mLogln[0m(FatalLevel, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - Fatalln - Exit - logger
                                          
          335‚îÜ logger.[1m[24mExit[0m(1)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m         
          logrus - Panicln - Logln - logger
                                           
          339‚îÜ logger.[1m[24mLogln[0m(PanicLevel, args...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m          
          logrus - Exit - runHandlers - $IMP
                                            
          343‚îÜ [1m[24mrunHandlers[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m         
          logrus - Exit - ExitFunc - logger
                                           
          347‚îÜ logger.[1m[24mExitFunc[0m(code)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                
          logrus - SetNoLock - Disable - logger.mu
                                                  
          354‚îÜ logger.mu.[1m[24mDisable[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m     
          logrus - level - Level - $IMP
                                       
          358‚îÜ return [1m[24mLevel[0m(atomic.LoadUint32((*uint32)(&logger.Level)))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m            
          logrus - level - LoadUint32 - atomic
                                              
          358‚îÜ return Level(atomic.[1m[24mLoadUint32[0m((*uint32)(&logger.Level)))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - level - *uint32 - $IMP
                                         
          358‚îÜ return Level(atomic.LoadUint32(([1m[24m*uint32[0m)(&logger.Level)))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                
          logrus - SetLevel - StoreUint32 - atomic
                                                  
          363‚îÜ atomic.[1m[24mStoreUint32[0m((*uint32)(&logger.Level), uint32(level))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m          
          logrus - SetLevel - *uint32 - $IMP
                                            
          363‚îÜ atomic.StoreUint32(([1m[24m*uint32[0m)(&logger.Level), uint32(level))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m         
          logrus - SetLevel - uint32 - $IMP
                                           
          363‚îÜ atomic.StoreUint32((*uint32)(&logger.Level), [1m[24muint32[0m(level))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m          
          logrus - GetLevel - level - logger
                                            
          368‚îÜ return logger.[1m[24mlevel[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m           
          logrus - AddHook - Lock - logger.mu
                                             
          373‚îÜ logger.mu.[1m[24mLock[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m             
          logrus - AddHook - Unlock - logger.mu
                                               
          374‚îÜ defer logger.mu.[1m[24mUnlock[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m             
          logrus - AddHook - Add - logger.Hooks
                                               
          375‚îÜ logger.Hooks.[1m[24mAdd[0m(hook)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                
          logrus - IsLevelEnabled - level - logger
                                                  
          380‚îÜ return logger.[1m[24mlevel[0m() >= level
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                
          logrus - SetFormatter - Lock - logger.mu
                                                  
          385‚îÜ logger.mu.[1m[24mLock[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                  
          logrus - SetFormatter - Unlock - logger.mu
                                                    
          386‚îÜ defer logger.mu.[1m[24mUnlock[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m             
          logrus - SetOutput - Lock - logger.mu
                                               
          392‚îÜ logger.mu.[1m[24mLock[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m               
          logrus - SetOutput - Unlock - logger.mu
                                                 
          393‚îÜ defer logger.mu.[1m[24mUnlock[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                   
          logrus - SetReportCaller - Lock - logger.mu
                                                     
          398‚îÜ logger.mu.[1m[24mLock[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                     
          logrus - SetReportCaller - Unlock - logger.mu
                                                       
          399‚îÜ defer logger.mu.[1m[24mUnlock[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                
          logrus - ReplaceHooks - Lock - logger.mu
                                                  
          405‚îÜ logger.mu.[1m[24mLock[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                  
          logrus - ReplaceHooks - Unlock - logger.mu
                                                    
          408‚îÜ logger.mu.[1m[24mUnlock[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                 
          logrus - SetBufferPool - Lock - logger.mu
                                                   
          414‚îÜ logger.mu.[1m[24mLock[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                   
          logrus - SetBufferPool - Unlock - logger.mu
                                                     
          415‚îÜ defer logger.mu.[1m[24mUnlock[0m()
                                         
  [36m[22m[24m  code/logrus/logrus.go [0m
       [1m[24mgo-import-collection[0m
          $ALIAS - fmt               
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m        
  "fmt"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - log               
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m        
  "fmt"[0m                    
            5‚îÜ [1m[24m        
  "log"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - strings           
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m        
  "fmt"[0m                    
            5‚îÜ [1m[24m        
  "log"[0m                    
            6‚îÜ [1m[24m            
  "strings"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m             
          logrus - String - MarshalText - level
                                               
           17‚îÜ if b, err := level.[1m[24mMarshalText[0m(); err == nil {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - String - string - $IMP
                                         
           18‚îÜ return [1m[24mstring[0m(b)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m               
          logrus - ParseLevel - ToLower - strings
                                                 
           26‚îÜ switch strings.[1m[24mToLower[0m(lvl) {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m          
          logrus - ParseLevel - Errorf - fmt
                                            
           44‚îÜ return l, fmt.[1m[24mErrorf[0m("not a valid logrus Level: %q", lvl)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                  
          logrus - UnmarshalText - ParseLevel - $IMP
                                                    
           49‚îÜ l, err := [1m[24mParseLevel[0m(string(text))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - UnmarshalText - string - $IMP
                                                
           49‚îÜ l, err := ParseLevel([1m[24mstring[0m(text))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m           
          logrus - MarshalText - Errorf - fmt
                                             
           77‚îÜ return nil, fmt.[1m[24mErrorf[0m("not a valid logrus level %d", level)
                                                           
  [36m[22m[24m  code/logrus/terminal_check_appengine.go [0m
       [1m[24mgo-import-collection[0m
          $ALIAS - io                
                                     
            5‚îÜ [1m[24mimport ([0m
            6‚îÜ [1m[24m       
  "io"[0m                    
                                                     
  [36m[22m[24m  code/logrus/terminal_check_bsd.go [0m
       [1m[24mgo-import-collection[0m   
          $ALIAS - golang.org/x/sys/unix
                                        
            6‚îÜ [1m[24mimport "golang.org/x/sys/unix"[0m
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                    
          logrus - isTerminal - IoctlGetTermios - unix
                                                      
           11‚îÜ _, err := unix.[1m[24mIoctlGetTermios[0m(fd, ioctlReadTermios)
                                                             
  [36m[22m[24m  code/logrus/terminal_check_no_terminal.go [0m
       [1m[24mgo-import-collection[0m
          $ALIAS - io                
                                     
            5‚îÜ [1m[24mimport ([0m
            6‚îÜ [1m[24m       
  "io"[0m                    
                                                              
  [36m[22m[24m  code/logrus/terminal_check_notappengine.go [0m
       [1m[24mgo-import-collection[0m
          $ALIAS - io                
                                     
            5‚îÜ [1m[24mimport ([0m
            6‚îÜ [1m[24m       
  "io"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - os                
                                     
            5‚îÜ [1m[24mimport ([0m
            6‚îÜ [1m[24m       
  "io"[0m                    
            7‚îÜ [1m[24m       
  "os"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                    
          logrus - checkIfTerminal - isTerminal - $IMP
                                                      
           13‚îÜ return [1m[24misTerminal[0m(int(v.Fd()))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m             
          logrus - checkIfTerminal - int - $IMP
                                               
           13‚îÜ return isTerminal([1m[24mint[0m(v.Fd()))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m         
          logrus - checkIfTerminal - Fd - v
                                           
           13‚îÜ return isTerminal(int(v.[1m[24mFd[0m()))
                                                         
  [36m[22m[24m  code/logrus/terminal_check_solaris.go [0m
       [1m[24mgo-import-collection[0m   
          $ALIAS - golang.org/x/sys/unix
                                        
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m                          
  "golang.org/x/sys/unix"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                   
          logrus - isTerminal - IoctlGetTermio - unix
                                                     
            9‚îÜ _, err := unix.[1m[24mIoctlGetTermio[0m(fd, unix.TCGETA)
                                                      
  [36m[22m[24m  code/logrus/terminal_check_unix.go [0m
       [1m[24mgo-import-collection[0m   
          $ALIAS - golang.org/x/sys/unix
                                        
            8‚îÜ [1m[24mimport "golang.org/x/sys/unix"[0m
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                    
          logrus - isTerminal - IoctlGetTermios - unix
                                                      
           13‚îÜ _, err := unix.[1m[24mIoctlGetTermios[0m(fd, ioctlReadTermios)
                                                         
  [36m[22m[24m  code/logrus/terminal_check_windows.go [0m
       [1m[24mgo-import-collection[0m
          $ALIAS - io                
                                     
            5‚îÜ [1m[24mimport ([0m
            6‚îÜ [1m[24m       
  "io"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - os                
                                     
            5‚îÜ [1m[24mimport ([0m
            6‚îÜ [1m[24m       
  "io"[0m                    
            7‚îÜ [1m[24m       
  "os"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m      
          $ALIAS - golang.org/x/sys/windows
                                           
            5‚îÜ [1m[24mimport ([0m
            6‚îÜ [1m[24m       
  "io"[0m                    
            7‚îÜ [1m[24m       
  "os"[0m                    
            8‚îÜ [1m[24m[0m
            9‚îÜ [1m[24m                             
  "golang.org/x/sys/windows"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                   
          logrus - checkIfTerminal - Handle - windows
                                                     
           15‚îÜ handle := windows.[1m[24mHandle[0m(v.Fd())
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m         
          logrus - checkIfTerminal - Fd - v
                                           
           15‚îÜ handle := windows.Handle(v.[1m[24mFd[0m())
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                           
          logrus - checkIfTerminal - GetConsoleMode - windows
                                                             
           17‚îÜ if err := windows.[1m[24mGetConsoleMode[0m(handle, &mode); err != nil {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                           
          logrus - checkIfTerminal - SetConsoleMode - windows
                                                             
           21‚îÜ if err := windows.[1m[24mSetConsoleMode[0m(handle, mode); err != nil {
                                                 
  [36m[22m[24m  code/logrus/text_formatter.go [0m
       [1m[24mgo-import-collection[0m
          $ALIAS - bytes             
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - fmt               
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            5‚îÜ [1m[24m        
  "fmt"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - os                
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            5‚îÜ [1m[24m        
  "fmt"[0m                    
            6‚îÜ [1m[24m       
  "os"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - runtime           
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            5‚îÜ [1m[24m        
  "fmt"[0m                    
            6‚îÜ [1m[24m       
  "os"[0m                    
            7‚îÜ [1m[24m            
  "runtime"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - sort              
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            5‚îÜ [1m[24m        
  "fmt"[0m                    
            6‚îÜ [1m[24m       
  "os"[0m                    
            7‚îÜ [1m[24m            
  "runtime"[0m                    
            8‚îÜ [1m[24m         
  "sort"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - strconv           
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            5‚îÜ [1m[24m        
  "fmt"[0m                    
            6‚îÜ [1m[24m       
  "os"[0m                    
            7‚îÜ [1m[24m            
  "runtime"[0m                    
            8‚îÜ [1m[24m         
  "sort"[0m                    
            9‚îÜ [1m[24m            
  "strconv"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - strings           
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            5‚îÜ [1m[24m        
  "fmt"[0m                    
            6‚îÜ [1m[24m       
  "os"[0m                    
            7‚îÜ [1m[24m            
  "runtime"[0m                    
            8‚îÜ [1m[24m         
  "sort"[0m                    
            9‚îÜ [1m[24m            
  "strconv"[0m                    
           10‚îÜ [1m[24m            
  "strings"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - sync              
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            5‚îÜ [1m[24m        
  "fmt"[0m                    
            6‚îÜ [1m[24m       
  "os"[0m                    
            7‚îÜ [1m[24m            
  "runtime"[0m                    
            8‚îÜ [1m[24m         
  "sort"[0m                    
            9‚îÜ [1m[24m            
  "strconv"[0m                    
           10‚îÜ [1m[24m            
  "strings"[0m                    
           11‚îÜ [1m[24m         
  "sync"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - time              
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            5‚îÜ [1m[24m        
  "fmt"[0m                    
            6‚îÜ [1m[24m       
  "os"[0m                    
            7‚îÜ [1m[24m            
  "runtime"[0m                    
            8‚îÜ [1m[24m         
  "sort"[0m                    
            9‚îÜ [1m[24m            
  "strconv"[0m                    
           10‚îÜ [1m[24m            
  "strings"[0m                    
           11‚îÜ [1m[24m         
  "sync"[0m                    
           12‚îÜ [1m[24m         
  "time"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - unicode/utf8      
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bytes"[0m                    
            5‚îÜ [1m[24m        
  "fmt"[0m                    
            6‚îÜ [1m[24m       
  "os"[0m                    
            7‚îÜ [1m[24m            
  "runtime"[0m                    
            8‚îÜ [1m[24m         
  "sort"[0m                    
            9‚îÜ [1m[24m            
  "strconv"[0m                    
           10‚îÜ [1m[24m            
  "strings"[0m                    
           11‚îÜ [1m[24m         
  "sync"[0m                    
           12‚îÜ [1m[24m         
  "time"[0m                    
             [hid 1 additional lines, adjust with --max-lines-per-finding] 
       [1m[24mgo-function-chain[0m  
          logrus - init - Now - time
                                    
           26‚îÜ baseTimestamp = time.[1m[24mNow[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - init - checkIfTerminal - $IMP
                                                
          106‚îÜ f.isTerminal = [1m[24mcheckIfTerminal[0m(entry.Logger.Out)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - init - RuneCount - utf8
                                          
          110‚îÜ levelTextLength := utf8.[1m[24mRuneCount[0m([]byte(level.String()))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m      
          logrus - init - String - level
                                        
          110‚îÜ levelTextLength := utf8.RuneCount([]byte(level.[1m[24mString[0m()))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m           
          logrus - isColored - LookupEnv - os
                                             
          121‚îÜ switch force, ok := os.[1m[24mLookupEnv[0m("CLICOLOR_FORCE"); {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - isColored - Getenv - os
                                          
          124‚îÜ case ok && force == "0", os.[1m[24mGetenv[0m("CLICOLOR") == "0":
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                   
          logrus - Format - prefixFieldClashes - $IMP
                                                     
          138‚îÜ [1m[24mprefixFieldClashes[0m(data, f.FieldMap, entry.HasCaller())
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m           
          logrus - Format - HasCaller - entry
                                             
          138‚îÜ prefixFieldClashes(data, f.FieldMap, entry.[1m[24mHasCaller[0m())
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m    
          logrus - Format - len - $IMP
                                      
          139‚îÜ keys := make([]string, 0, [1m[24mlen[0m(data))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - Format - append - $IMP
                                         
          141‚îÜ keys = [1m[24mappend[0m(keys, k)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m    
          logrus - Format - len - $IMP
                                      
          146‚îÜ fixedKeys := make([]string, 0, 4+[1m[24mlen[0m(data))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - Format - append - $IMP
                                         
          148‚îÜ fixedKeys = [1m[24mappend[0m(fixedKeys, f.FieldMap.resolve(FieldKeyTime))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - Format - resolve - f.FieldMap
                                                
          148‚îÜ fixedKeys = append(fixedKeys, f.FieldMap.[1m[24mresolve[0m(FieldKeyTime))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - Format - append - $IMP
                                         
          150‚îÜ fixedKeys = [1m[24mappend[0m(fixedKeys, f.FieldMap.resolve(FieldKeyLevel))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - Format - resolve - f.FieldMap
                                                
          150‚îÜ fixedKeys = append(fixedKeys, f.FieldMap.[1m[24mresolve[0m(FieldKeyLevel))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - Format - append - $IMP
                                         
          152‚îÜ fixedKeys = [1m[24mappend[0m(fixedKeys, f.FieldMap.resolve(FieldKeyMsg))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - Format - resolve - f.FieldMap
                                                
          152‚îÜ fixedKeys = append(fixedKeys, f.FieldMap.[1m[24mresolve[0m(FieldKeyMsg))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - Format - append - $IMP
                                         
          155‚îÜ fixedKeys = [1m[24mappend[0m(fixedKeys, f.FieldMap.resolve(FieldKeyLogrusError))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - Format - resolve - f.FieldMap
                                                
          155‚îÜ fixedKeys = append(fixedKeys, f.FieldMap.[1m[24mresolve[0m(FieldKeyLogrusError))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m           
          logrus - Format - HasCaller - entry
                                             
          157‚îÜ if entry.[1m[24mHasCaller[0m() {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - Format - CallerPrettyfier - f
                                                
          159‚îÜ funcVal, fileVal = f.[1m[24mCallerPrettyfier[0m(entry.Caller)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - Format - Sprintf - fmt
                                         
          162‚îÜ fileVal = fmt.[1m[24mSprintf[0m("%s:%d", entry.Caller.File, entry.Caller.Line)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - Format - append - $IMP
                                         
          166‚îÜ fixedKeys = [1m[24mappend[0m(fixedKeys, f.FieldMap.resolve(FieldKeyFunc))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - Format - resolve - f.FieldMap
                                                
          166‚îÜ fixedKeys = append(fixedKeys, f.FieldMap.[1m[24mresolve[0m(FieldKeyFunc))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - Format - append - $IMP
                                         
          169‚îÜ fixedKeys = [1m[24mappend[0m(fixedKeys, f.FieldMap.resolve(FieldKeyFile))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - Format - resolve - f.FieldMap
                                                
          169‚îÜ fixedKeys = append(fixedKeys, f.FieldMap.[1m[24mresolve[0m(FieldKeyFile))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - Format - Strings - sort
                                          
          175‚îÜ sort.[1m[24mStrings[0m(keys)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - Format - append - $IMP
                                         
          176‚îÜ fixedKeys = [1m[24mappend[0m(fixedKeys, keys...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - Format - isColored - f
                                         
          178‚îÜ if !f.[1m[24misColored[0m() {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - Format - append - $IMP
                                         
          179‚îÜ fixedKeys = [1m[24mappend[0m(fixedKeys, keys...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m         
          logrus - Format - SortingFunc - f
                                           
          180‚îÜ f.[1m[24mSortingFunc[0m(fixedKeys)
            ‚ãÆ‚îÜ----------------------------------------
          182‚îÜ f.[1m[24mSortingFunc[0m(keys)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - Format - append - $IMP
                                         
          186‚îÜ fixedKeys = [1m[24mappend[0m(fixedKeys, keys...)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                 
          logrus - Format - Do - f.terminalInitOnce
                                                   
          196‚îÜ f.terminalInitOnce.[1m[24mDo[0m(func() { f.init(entry) })
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m  
          logrus - Format - init - f
                                    
          196‚îÜ f.terminalInitOnce.Do(func() { f.[1m[24minit[0m(entry) })
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - Format - isColored - f
                                         
          202‚îÜ if f.[1m[24misColored[0m() {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m          
          logrus - Format - printColored - f
                                            
          203‚îÜ f.[1m[24mprintColored[0m(b, entry, keys, data, timestampFormat)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - Format - resolve - f.FieldMap
                                                
          209‚îÜ case key == f.FieldMap.[1m[24mresolve[0m(FieldKeyTime):
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m             
          logrus - Format - Format - entry.Time
                                               
          210‚îÜ value = entry.Time.[1m[24mFormat[0m(timestampFormat)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - Format - resolve - f.FieldMap
                                                
          211‚îÜ case key == f.FieldMap.[1m[24mresolve[0m(FieldKeyLevel):
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - Format - String - entry.Level
                                                
          212‚îÜ value = entry.Level.[1m[24mString[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - Format - resolve - f.FieldMap
                                                
          213‚îÜ case key == f.FieldMap.[1m[24mresolve[0m(FieldKeyMsg):
            ‚ãÆ‚îÜ----------------------------------------
          215‚îÜ case key == f.FieldMap.[1m[24mresolve[0m(FieldKeyLogrusError):
            ‚ãÆ‚îÜ----------------------------------------
          217‚îÜ case key == f.FieldMap.[1m[24mresolve[0m(FieldKeyFunc) && entry.HasCaller():
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m           
          logrus - Format - HasCaller - entry
                                             
          217‚îÜ case key == f.FieldMap.resolve(FieldKeyFunc) && entry.[1m[24mHasCaller[0m():
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - Format - resolve - f.FieldMap
                                                
          219‚îÜ case key == f.FieldMap.[1m[24mresolve[0m(FieldKeyFile) && entry.HasCaller():
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m           
          logrus - Format - HasCaller - entry
                                             
          219‚îÜ case key == f.FieldMap.resolve(FieldKeyFile) && entry.[1m[24mHasCaller[0m():
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m            
          logrus - Format - appendKeyValue - f
                                              
          224‚îÜ f.[1m[24mappendKeyValue[0m(b, key, value)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m       
          logrus - Format - WriteByte - b
                                         
          228‚îÜ b.[1m[24mWriteByte[0m('\n')
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m   
          logrus - Format - Bytes - b
                                     
          229‚îÜ return b.[1m[24mBytes[0m(), nil
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                 
          logrus - printColored - ToUpper - strings
                                                   
          247‚îÜ levelText := strings.[1m[24mToUpper[0m(entry.Level.String())
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                    
          logrus - printColored - String - entry.Level
                                                      
          247‚îÜ levelText := strings.ToUpper(entry.Level.[1m[24mString[0m())
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - printColored - Itoa - strconv
                                                
          254‚îÜ formatString := "%-" + strconv.[1m[24mItoa[0m(f.levelTextMaxLength) + "s"
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m             
          logrus - printColored - Sprintf - fmt
                                               
          258‚îÜ levelText = fmt.[1m[24mSprintf[0m(formatString, levelText)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                    
          logrus - printColored - TrimSuffix - strings
                                                      
          263‚îÜ entry.Message = strings.[1m[24mTrimSuffix[0m(entry.Message, "\n")
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                 
          logrus - printColored - HasCaller - entry
                                                   
          266‚îÜ if entry.[1m[24mHasCaller[0m() {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m             
          logrus - printColored - Sprintf - fmt
                                               
          267‚îÜ funcVal := fmt.[1m[24mSprintf[0m("%s()", entry.Caller.Function)
            ‚ãÆ‚îÜ----------------------------------------
          268‚îÜ fileVal := fmt.[1m[24mSprintf[0m("%s:%d", entry.Caller.File, entry.Caller.Line)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                    
          logrus - printColored - CallerPrettyfier - f
                                                      
          271‚îÜ funcVal, fileVal = f.[1m[24mCallerPrettyfier[0m(entry.Caller)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m             
          logrus - printColored - Fprintf - fmt
                                               
          285‚îÜ fmt.[1m[24mFprintf[0m(b, "\x1b[%dm%s\x1b[0m%s %-44s ", levelColor, levelText, caller, entry.Message)
            ‚ãÆ‚îÜ----------------------------------------
          287‚îÜ fmt.[1m[24mFprintf[0m(b, "\x1b[%dm%s\x1b[0m[%04d]%s %-44s ", levelColor, levelText,                      
  int(entry.Time.Sub(baseTimestamp)/time.Second), caller, entry.Message)                                                
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m          
          logrus - printColored - int - $IMP
                                            
          287‚îÜ fmt.Fprintf(b, "\x1b[%dm%s\x1b[0m[%04d]%s %-44s ", levelColor, levelText,                                
  [1m[24mint[0m(entry.Time.Sub(baseTimestamp)/time.Second), caller, entry.Message)                                      
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                
          logrus - printColored - Sub - entry.Time
                                                  
          287‚îÜ fmt.Fprintf(b, "\x1b[%dm%s\x1b[0m[%04d]%s %-44s ", levelColor, levelText,                                
  int(entry.Time.[1m[24mSub[0m(baseTimestamp)/time.Second), caller, entry.Message)                                      
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m             
          logrus - printColored - Fprintf - fmt
                                               
          289‚îÜ fmt.[1m[24mFprintf[0m(b, "\x1b[%dm%s\x1b[0m[%s]%s %-44s ", levelColor, levelText,                        
  entry.Time.Format(timestampFormat), caller, entry.Message)                                                            
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                   
          logrus - printColored - Format - entry.Time
                                                     
          289‚îÜ fmt.Fprintf(b, "\x1b[%dm%s\x1b[0m[%s]%s %-44s ", levelColor, levelText,                                  
  entry.Time.[1m[24mFormat[0m(timestampFormat), caller, entry.Message)                                                  
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m             
          logrus - printColored - Fprintf - fmt
                                               
          293‚îÜ fmt.[1m[24mFprintf[0m(b, " \x1b[%dm%s\x1b[0m=", levelColor, k)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m               
          logrus - printColored - appendValue - f
                                                 
          294‚îÜ f.[1m[24mappendValue[0m(b, v)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m          
          logrus - needsQuoting - len - $IMP
                                            
          302‚îÜ if f.QuoteEmptyFields && [1m[24mlen[0m(text) == 0 {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m         
          logrus - appendKeyValue - Len - b
                                           
          320‚îÜ if b.[1m[24mLen[0m() > 0 {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m               
          logrus - appendKeyValue - WriteByte - b
                                                 
          321‚îÜ b.[1m[24mWriteByte[0m(' ')
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                 
          logrus - appendKeyValue - WriteString - b
                                                   
          323‚îÜ b.[1m[24mWriteString[0m(key)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m               
          logrus - appendKeyValue - WriteByte - b
                                                 
          324‚îÜ b.[1m[24mWriteByte[0m('=')
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                 
          logrus - appendKeyValue - appendValue - f
                                                   
          325‚îÜ f.[1m[24mappendValue[0m(b, value)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m           
          logrus - appendValue - Sprint - fmt
                                             
          331‚îÜ stringVal = fmt.[1m[24mSprint[0m(value)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m               
          logrus - appendValue - needsQuoting - f
                                                 
          334‚îÜ if !f.[1m[24mneedsQuoting[0m(stringVal) {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - appendValue - WriteString - b
                                                
          335‚îÜ b.[1m[24mWriteString[0m(stringVal)
            ‚ãÆ‚îÜ----------------------------------------
          337‚îÜ b.[1m[24mWriteString[0m(fmt.Sprintf("%q", stringVal))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m            
          logrus - appendValue - Sprintf - fmt
                                              
          337‚îÜ b.WriteString(fmt.[1m[24mSprintf[0m("%q", stringVal))
                                         
  [36m[22m[24m  code/logrus/writer.go [0m
       [1m[24mgo-import-collection[0m
          $ALIAS - bufio             
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bufio"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - io                
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bufio"[0m                    
            5‚îÜ [1m[24m       
  "io"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - runtime           
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bufio"[0m                    
            5‚îÜ [1m[24m       
  "io"[0m                    
            6‚îÜ [1m[24m            
  "runtime"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-import-collection[0m
          $ALIAS - strings           
                                     
            3‚îÜ [1m[24mimport ([0m
            4‚îÜ [1m[24m          
  "bufio"[0m                    
            5‚îÜ [1m[24m       
  "io"[0m                    
            6‚îÜ [1m[24m            
  "runtime"[0m                    
            7‚îÜ [1m[24m            
  "strings"[0m                    
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - Writer - WriterLevel - logger
                                                
           12‚îÜ return logger.[1m[24mWriterLevel[0m(InfoLevel)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - WriterLevel - NewEntry - $IMP
                                                
           21‚îÜ return [1m[24mNewEntry[0m(logger).WriterLevel(level)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                             
          logrus - WriterLevel - WriterLevel - NewEntry(logger)
                                                               
           21‚îÜ return NewEntry(logger).[1m[24mWriterLevel[0m(level)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m             
          logrus - Writer - WriterLevel - entry
                                               
           26‚îÜ return entry.[1m[24mWriterLevel[0m(InfoLevel)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m        
          logrus - WriterLevel - Pipe - io
                                          
           31‚îÜ reader, writer := io.[1m[24mPipe[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                    
          logrus - WriterLevel - writerScanner - entry
                                                      
           57‚îÜ go entry.[1m[24mwriterScanner[0m(reader, printFunc)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                     
          logrus - WriterLevel - SetFinalizer - runtime
                                                       
           60‚îÜ runtime.[1m[24mSetFinalizer[0m(writer, writerFinalizer)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                   
          logrus - writerScanner - NewScanner - bufio
                                                     
           67‚îÜ scanner := bufio.[1m[24mNewScanner[0m(reader)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                 
          logrus - writerScanner - Buffer - scanner
                                                   
           70‚îÜ scanner.[1m[24mBuffer[0m(make([]byte, bufio.MaxScanTokenSize), bufio.MaxScanTokenSize)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m           
          logrus - writerScanner - len - $IMP
                                             
           75‚îÜ if [1m[24mlen[0m(data) >= chunkSize {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                  
          logrus - writerScanner - ScanLines - bufio
                                                    
           79‚îÜ return bufio.[1m[24mScanLines[0m(data, atEOF)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                
          logrus - writerScanner - Split - scanner
                                                  
           83‚îÜ scanner.[1m[24mSplit[0m(splitFunc)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m               
          logrus - writerScanner - Scan - scanner
                                                 
           86‚îÜ for scanner.[1m[24mScan[0m() {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                 
          logrus - writerScanner - printFunc - $IMP
                                                   
           87‚îÜ [1m[24mprintFunc[0m(strings.TrimRight(scanner.Text(), "\r\n"))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                    
          logrus - writerScanner - TrimRight - strings
                                                      
           87‚îÜ printFunc(strings.[1m[24mTrimRight[0m(scanner.Text(), "\r\n"))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m               
          logrus - writerScanner - Text - scanner
                                                 
           87‚îÜ printFunc(strings.TrimRight(scanner.[1m[24mText[0m(), "\r\n"))
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m              
          logrus - writerScanner - Err - scanner
                                                
           91‚îÜ if err := scanner.[1m[24mErr[0m(); err != nil {
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m               
          logrus - writerScanner - Errorf - entry
                                                 
           92‚îÜ entry.[1m[24mErrorf[0m("Error while reading from Writer: %s", err)
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m               
          logrus - writerScanner - Close - reader
                                                 
           96‚îÜ reader.[1m[24mClose[0m()
            ‚ãÆ‚îÜ----------------------------------------
       [1m[24mgo-function-chain[0m                 
          logrus - writerFinalizer - Close - writer
                                                   
          101‚îÜ writer.[1m[24mClose[0m()

